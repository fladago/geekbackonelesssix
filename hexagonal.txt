1. api, db - внешние адаптеры
2. app - логика. Операции создание профиля, удаление, чтение, получение всех профилей 
и менеджмент внешних адаптеров(api, db).

3. Внешний файл, через который запускаем приложение. Из папки cmd.
cmd/reguser/main.go

Бизнес логика.
- Карточка юзера. Карточка должна содержать операции.
С точки зрения бизнес логики, нам нужен репозиторий юзеров.

Пакет app - это корневая бизнес логика, поэтому все внешние зависимости будут использовать наши сущности.

В сторе простые операции, а в бизнес логике сложные последовательности

4. Оркестровку делаем в starter. Здесь стартуем app. 

5. В юзерстор необходимо реализовать все методы, которые ожидаем в бизнес логике
Интерфейсы юзерстор

При разрезе архитектурных слоев, необходимо проверять, что структуры и интерфейсы соответствуют
всем архитектурным слоям. При конкретной реализации бизнес логики под конкретный слой.

6. Реализуем грейсфул шатдаун в майне.

7. Реализуем мемстор. Адаптер исходящего запроса.

8. Реализуем апи. Адаптер входящего запроса.
Входящий адаптер обращается в бизнес логику. Все строго по стандартам гексогональной архитектуры.
Методы работы:
    Должен открыть листенер для http протокола

9. В хендлерах работаем только с бизнес логикой. Ничего не знаем про базу данных
Никаких обращений к пакету usermemstore не будет

Адаптеры - это как плагинчики друг ко дружке

10. Клиент можно строить без гексоганальной архитектуры
в любом пакете уровня внешнего адаптера

11. При появлении новой сущности
1. Начинаем с бизнес логики. Добавляем пакет новой сущности
repos/item/item.go
2. Прописываем методы бизнес логики, которые ожидаем от нее
3. Под нее готовим интерфейсы к сторам, которые планируем использовать с этой сущностью
4. Имплементируем сторы в базе данных
5. Делаем апи, которое наполняет объекты бизнес логики и вызывает объекты бизнес логики.

curl -X GET -u admin:admin 'localhost:8000/search?q=use'
curl -X GET -u admin:admin 'localhost:8000/read?uid=b95ca3ed-b928-4d5f-83b3-f59f15547c1f'
curl -X POST -u admin:admin -d '{"name": "user2"}' localhost:8000/create